services:
  # Main eBay Clone App (your existing app)
  # app:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   container_name: free-ebay
  #   environment:
  #     - PORT=${PORT}
  #     - KAFKA_BROKERS=kafka-broker-1:9092 # Corrected to kafka-broker-1
  #     - ELASTIC_NODE=${ELASTIC_NODE}
  #     - ELASTIC_USERNAME=${ELASTIC_USERNAME}
  #     - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
  #   ports:
  #     - '3000:3000'
  #     - '9229:9229'
  #   command: yarn start:dev
  #   depends_on:
  #     - exchange
  #     - kafka-broker-1 # Add dependency on kafka-broker-1
  #     - elasticsearch
  #     - redis
  #   volumes:
  #     - ./src:/app/src
  #     - ./node_modules:/app/node_modules

  # PostgreSQL
  exchange:
    image: postgres:13
    env_file:
      - .dev.env
    container_name: exchange
    ports:
      - '6433:5432'
    volumes:
      - ./pgdata_dev:/var/lib/postgresql/data
    restart: always

  exchange_test:
    image: postgres:13
    env_file:
      - .test.env
    container_name: exchange_test
    ports:
      - '7433:5432'
    volumes:
      - ./pgdata_test:/var/lib/postgresql/data
    restart: always

  # Redis
  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - '6379:6379'
    volumes:
      - redis-data:/data
    restart: unless-stopped
    command:
      [
        'redis-server',
        '--appendonly',
        'yes',
        '--requirepass',
        '$${REDIS_PASSWORD}',
      ]
    env_file:
      - .dev.env

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.9.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - ELASTIC_PASSWORD=$${ELASTIC_PASSWORD}
      - xpack.security.enabled=true
      - xpack.security.http.ssl.enabled=false
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ports:
      - '9200:9200'
      - '9300:9300'
    volumes:
      - esdata:/usr/share/elasticsearch/data
    restart: unless-stopped
    env_file:
      - .dev.env

  kafdrop:
    image: obsidiandynamics/kafdrop
    restart: 'no'
    ports:
      - '9000:9000'
    environment:
      KAFKA_BROKERCONNECT: 'kafka:29092'
    depends_on:
      - 'kafka'
  kafka:
    image: obsidiandynamics/kafka
    restart: 'no'
    ports:
      - '2181:2181'
      - '9092:9092'
    environment:
      KAFKA_LISTENERS: 'INTERNAL://:29092,EXTERNAL://:9092'
      KAFKA_ADVERTISED_LISTENERS: 'INTERNAL://kafka:29092,EXTERNAL://localhost:9092'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'INTERNAL'
      KAFKA_ZOOKEEPER_SESSION_TIMEOUT: '6000'
      KAFKA_RESTART_ATTEMPTS: '10'
      KAFKA_RESTART_DELAY: '5'
      ZOOKEEPER_AUTOPURGE_PURGE_INTERVAL: '0'

  # Elasticsearch Indexer Microservice (new service)
  # elasticsearch-indexer:
  #   build:
  #     context: ./elasticsearch-indexer
  #     dockerfile: Dockerfile
  #   container_name: elasticsearch-indexer
  #   environment:
  #     - KAFKA_BROKERS=kafka-broker-1:9092 # Corrected to kafka-broker-1
  #     - ELASTICSEARCH_NODE=${ELASTIC_NODE}
  #     - ELASTICSEARCH_USERNAME=${ELASTIC_USERNAME}
  #     - ELASTICSEARCH_PASSWORD=${ELASTIC_PASSWORD}
  #   depends_on:
  #     - kafka-broker-1 # Corrected dependency
  #     - elasticsearch
  #   volumes:
  #     - ./elasticsearch-indexer/src:/app/src
  #     - ./elasticsearch-indexer/node_modules:/app/node_modules
  #   restart: always

volumes:
  redis-data:
  esdata:
  kafka_data:
